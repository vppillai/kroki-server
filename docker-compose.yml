version: "3.3" 

services:
  core:
    image: yuzutech/kroki
    environment:
      - KROKI_MERMAID_HOST=mermaid
      - KROKI_BPMN_HOST=bpmn
      - KROKI_EXCALIDRAW_HOST=excalidraw
      - KROKI_DIAGRAMSNET_HOST=diagramsnet
    ports:
      - "8000:8000"
    networks:
      - kroki_network

  mermaid:
    image: yuzutech/kroki-mermaid
    expose:
      - "8002"
    networks:
      - kroki_network

  bpmn:
    image: yuzutech/kroki-bpmn
    expose:
      - "8003"
    networks:
      - kroki_network

  excalidraw:
    image: yuzutech/kroki-excalidraw
    expose:
      - "8004"
    networks:
      - kroki_network

  # experimental!
  diagramsnet:
    image: yuzutech/kroki-diagramsnet
    expose:
      - "8005"
    networks:
      - kroki_network

  demosite:
    image: kroki-demosite:latest
    expose:
      - "8006"
    networks:
      - kroki_network
  nginx:
    image: nginx
    container_name: nginx-kroki
    depends_on:
      - core
      - demosite
    ports:
      - "8443:8443"
    networks:
      - kroki_network
    restart: always
    entrypoint: ["/bin/sh", "-c"]
    command: >
      mkdir -p /etc/nginx/certs && 
      echo 'Generating ECDSA self-signed SSL certificate...' &&
      openssl ecparam -name prime256v1 -genkey -noout -out /etc/nginx/certs/nginx.key &&
      openssl req -new -key /etc/nginx/certs/nginx.key -out /etc/nginx/certs/nginx.csr -subj '/CN=localhost' &&
      openssl x509 -req -in /etc/nginx/certs/nginx.csr -signkey /etc/nginx/certs/nginx.key -out /etc/nginx/certs/nginx.crt &&
      rm /etc/nginx/certs/nginx.csr &&  
      chmod 400 /etc/nginx/certs/nginx.key &&
      chmod 444 /etc/nginx/certs/nginx.crt &&

      cat >/etc/nginx/nginx.conf <<\EOF
      events {}
      http {
          server {
              listen 0.0.0.0:8443 ssl;
              server_name localhost;

              ssl_certificate /etc/nginx/certs/nginx.crt;
              ssl_certificate_key /etc/nginx/certs/nginx.key;

              location / {
                  proxy_pass http://core:8000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto https;
              }

              location = / {
                  proxy_pass http://demosite:8006/index.html;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto https;
              }

              location /examples {
                  proxy_pass http://demosite:8006/examples;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto https;
              }
          }
      }
      EOF

      exec nginx -g 'daemon off;'

networks:
  kroki_network:
    driver: bridge