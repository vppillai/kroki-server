version: "3.3" 

services:
  core:
    image: yuzutech/kroki
    environment:
      - KROKI_MERMAID_HOST=mermaid
      - KROKI_BPMN_HOST=bpmn
      - KROKI_EXCALIDRAW_HOST=excalidraw
      - KROKI_DIAGRAMSNET_HOST=diagramsnet
    ports:
      - "8000:8000"
    networks:
      - kroki_network

  mermaid:
    image: yuzutech/kroki-mermaid
    expose:
      - "8002"
    networks:
      - kroki_network

  bpmn:
    image: yuzutech/kroki-bpmn
    expose:
      - "8003"
    networks:
      - kroki_network

  excalidraw:
    image: yuzutech/kroki-excalidraw
    expose:
      - "8004"
    networks:
      - kroki_network

  # experimental!
  diagramsnet:
    image: yuzutech/kroki-diagramsnet
    expose:
      - "8005"
    networks:
      - kroki_network

  demosite:
    image: kroki-demosite:latest
    expose:
      - "8006"
    networks:
      - kroki_network

  nginx:
    image: nginx
    container_name: nginx-kroki
    depends_on:
      - core
      - demosite
    ports:
      - "8443:8443"
    networks:
      - kroki_network
    command: >
      bash -c "
        # Create certificates directory
        mkdir -p /etc/nginx/certs &&
        
        # Generate self-signed certificates
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 
          -keyout /etc/nginx/certs/server.key 
          -out /etc/nginx/certs/server.crt 
          -subj '/CN=localhost' &&
        chmod 400 /etc/nginx/certs/server.key &&
        chmod 444 /etc/nginx/certs/server.crt &&
        
        # Create nginx config file
        cat > /etc/nginx/nginx.conf << 'EOF'
        worker_processes  1;
        
        events {
            worker_connections  1024;
        }
        
        http {
            include       mime.types;
            default_type  application/octet-stream;
            sendfile      on;
            
            server {
                listen 8443 ssl;
                server_name localhost;
                
                ssl_certificate /etc/nginx/certs/server.crt;
                ssl_certificate_key /etc/nginx/certs/server.key;
                
                ssl_protocols TLSv1.2 TLSv1.3;
                ssl_prefer_server_ciphers on;
                ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
                
                location / {
                    proxy_pass http://demosite:8006;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                }
                
                location /api {
                    proxy_pass http://core:8000;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                }
            }
        }
        EOF
        &&
        
        # Start nginx
        nginx -g 'daemon off;'
      "

networks:
  kroki_network:
    driver: bridge